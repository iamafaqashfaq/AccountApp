// <auto-generated />
using System;
using AccountApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccountApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220313062034_AddedCustomerAndGLTrans")]
    partial class AddedCustomerAndGLTrans
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("AccountApp.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AccountApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AccountApp.Models.GLTran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Credit")
                        .HasColumnType("REAL");

                    b.Property<int?>("CustomerIDId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Debit")
                        .HasColumnType("REAL");

                    b.Property<double>("TranAmount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TranDateTimeStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranDetail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerIDId");

                    b.ToTable("GLTrans");
                });

            modelBuilder.Entity("AccountApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AccountApp.Models.GLTran", b =>
                {
                    b.HasOne("AccountApp.Models.Customer", "CustomerID")
                        .WithMany()
                        .HasForeignKey("CustomerIDId");

                    b.Navigation("CustomerID");
                });
#pragma warning restore 612, 618
        }
    }
}
